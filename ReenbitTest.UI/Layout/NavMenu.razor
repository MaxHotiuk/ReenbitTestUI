@using ReenbitTest.UI.Interfaces
@inject NavigationManager NavigationManager
@inject IAuthService AuthService

<div class="nav-container d-flex flex-column h-100">
    <!-- App Logo and Title Section -->
    <div class="d-flex flex-row align-center px-4 py-2">
        <MudText Typo="Typo.h5" Color="Color.Primary" Class="ml-2" Style="padding-top: 10px;">ReenbitTest</MudText>
    </div>
    <AuthorizeView>
        <Authorized>
            <ContentContainer ActiveSection="@ActiveSection" />
        </Authorized>
        <NotAuthorized>
            <MudDivider Class="my-2" />
            <div class="d-flex flex-column justify-center align-center h-100">
                <MudText Typo="Typo.h6" Color="Color.Primary">Log in to see your chats.</MudText>
            </div>
        </NotAuthorized>
    </AuthorizeView>
    
    <MudDivider Class="my-2" />
    
    <!-- User and Theme Controls Section - Bottom -->
    <div class="mt-auto">
        <MudDivider Class="mb-2" />
        
        <div class="px-4 py-2">
            <AuthorizeView>
                <Authorized>
                    <div class="d-flex flex-row justify-space-between align-center">
                        <MudTooltip Text="Chats">
                            <MudIconButton Icon="fas fa-comment" 
                                Color="@(ActiveSection == NavSection.Chats ? Color.Secondary : Color.Primary)" 
                                OnClick="@(() => ChangeActiveSection(NavSection.Chats))"
                                Class="flex-1" />
                        </MudTooltip>
                        
                        <MudTooltip Text="Profile">
                            <MudIconButton Icon="@Icons.Material.Filled.Person" 
                                Color="@(ActiveSection == NavSection.Profile ? Color.Secondary : Color.Primary)" 
                                OnClick="@(() => ChangeActiveSection(NavSection.Profile))"
                                Class="flex-1" />
                        </MudTooltip>
                        
                        <MudTooltip Text="Logout">
                            <MudIconButton Icon="fas fa-sign-out-alt" 
                                Color="Color.Primary" 
                                OnClick="LogoutUser"
                                Class="flex-1" />
                        </MudTooltip>
                        
                        <MudTooltip Text="@(_isDarkMode ? "Light Mode" : "Dark Mode")">
                            <MudIconButton Icon="@(_isDarkMode ? "fas fa-sun" : "fas fa-moon")" 
                                Color="Color.Primary" 
                                OnClick="@DarkModeToggle" 
                                Class="flex-1" />
                        </MudTooltip>
                    </div>
                </Authorized>
                <NotAuthorized>
                    <div class="d-flex flex-row justify-space-between align-center">
                        <MudTooltip Text="Login">
                            <MudIconButton Icon="fas fa-sign-in-alt" 
                                Color="Color.Primary" 
                                Href="/login"
                                Class="flex-1" />
                        </MudTooltip>
                        
                        <MudTooltip Text="Register">
                            <MudIconButton Icon="fas fa-user-plus" 
                                Color="Color.Primary" 
                                Href="/register"
                                Class="flex-1" />
                        </MudTooltip>
                        
                        <MudTooltip Text="@(_isDarkMode ? "Light Mode" : "Dark Mode")">
                            <MudIconButton Icon="@(_isDarkMode ? "fas fa-sun" : "fas fa-moon")" 
                                Color="Color.Primary" 
                                OnClick="@DarkModeToggle" 
                                Class="flex-1" />
                        </MudTooltip>
                    </div>
                </NotAuthorized>
            </AuthorizeView>
        </div>
    </div>
</div>

<style>
    .nav-container {
        height: 100%;
        overflow-y: auto;
    }
    
    .flex-1 {
        flex: 1;
    }

    .mud-nav-link-active {
        background-color: var(--mud-palette-action-default-hover);
        border-radius: var(--mud-default-borderradius);
    }
</style>

@code {
    [Parameter]
    public bool IsDarkMode { get; set; }
    
    [Parameter]
    public EventCallback<bool> IsDarkModeChanged { get; set; }
    
    [Parameter]
    public EventCallback OnLogout { get; set; }

    [Parameter]
    public NavSection ActiveSection { get; set; } = NavSection.Chats;

    [Parameter]
    public EventCallback<NavSection> ActiveSectionChanged { get; set; }
    
    private bool _isDarkMode => IsDarkMode;
    
    private async Task DarkModeToggle()
    {
        await IsDarkModeChanged.InvokeAsync(!_isDarkMode);
    }
    
    private async Task LogoutUser()
    {
        await OnLogout.InvokeAsync();
    }

    private async Task ChangeActiveSection(NavSection section)
    {
        ActiveSection = section;
        await ActiveSectionChanged.InvokeAsync(section);
    }

    public enum NavSection
    {
        Chats,
        Profile
    }
}